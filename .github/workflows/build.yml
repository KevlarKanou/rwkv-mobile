name: Build

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  setup:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
    - name: get-version
      id: get_version
      run: echo "VERSION=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

  openmp-ios:
    runs-on: macos-14
    env:
      DEVELOPER_DIR: /Applications/Xcode_13.4.1.app/Contents/Developer
      IOS_DEPLOYMENT_TARGET: '13.0'
      ENABLE_BITCODE: OFF
      ENABLE_ARC: OFF
      ENABLE_VISIBILITY: OFF
      EMSCRIPTEN_VERSION: 3.1.28
    steps:
    - name: cache-openmp
      id: cache-openmp
      uses: actions/cache@v4
      with:
        path: openmp-install
        key: openmp-ios-release-11.0.0-20230504
    - name: checkout
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
    - name: openmp
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/openmp-11.0.0.src.tar.xz
        tar -xf openmp-11.0.0.src.tar.xz
        cd openmp-11.0.0.src
        sed -i'' -e '/.size __kmp_unnamed_critical_addr/d' runtime/src/z_Linux_asm.S
        sed -i'' -e 's/__kmp_unnamed_critical_addr/___kmp_unnamed_critical_addr/g' runtime/src/z_Linux_asm.S
    - name: build-arm64
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        cd openmp-11.0.0.src
        mkdir -p build-arm64 && cd build-arm64
        cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/ios.toolchain.cmake -DPLATFORM=OS64 -DARCHS="arm64" \
            -DDEPLOYMENT_TARGET=$IOS_DEPLOYMENT_TARGET -DENABLE_BITCODE=$ENABLE_BITCODE -DENABLE_ARC=$ENABLE_ARC -DENABLE_VISIBILITY=$ENABLE_VISIBILITY \
            -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install \
            -DPERL_EXECUTABLE=/usr/local/bin/perl \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 3
        cmake --build . --target install/strip
    - name: build-simulatorarm64
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        cd openmp-11.0.0.src
        mkdir -p build-simulatorarm64 && cd build-simulatorarm64
        cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/ios.toolchain.cmake -DPLATFORM=SIMULATORARM64 \
            -DDEPLOYMENT_TARGET=$IOS_DEPLOYMENT_TARGET -DENABLE_BITCODE=$ENABLE_BITCODE -DENABLE_ARC=$ENABLE_ARC -DENABLE_VISIBILITY=$ENABLE_VISIBILITY \
            -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install \
            -DPERL_EXECUTABLE=/usr/local/bin/perl \
            -DLIBOMP_ENABLE_SHARED=OFF -DLIBOMP_OMPT_SUPPORT=OFF -DLIBOMP_USE_HWLOC=OFF ..
        cmake --build . -j 3
        cmake --build . --target install/strip
    - name: merge-fat-library
      if: steps.cache-openmp.outputs.cache-hit != 'true'
      run: |
        rm -rf $GITHUB_WORKSPACE/openmp-install
        mkdir -p $GITHUB_WORKSPACE/openmp-install
        cp -a openmp-11.0.0.src/build-arm64/install/include $GITHUB_WORKSPACE/openmp-install
        mkdir -p $GITHUB_WORKSPACE/openmp-install/lib
        lipo -create \
            openmp-11.0.0.src/build-arm64/install/lib/libomp.a \
            -o $GITHUB_WORKSPACE/openmp-install/lib/libomp.a
        lipo -create \
            openmp-11.0.0.src/build-simulatorarm64/install/lib/libomp.a \
            -o $GITHUB_WORKSPACE/openmp-install/lib/libomp-simulator.a
    - name: upload
      uses: actions/upload-artifact@v3
      with:
        name: openmp-ios
        path: openmp-install

  build-ios:
    needs: [setup, openmp-ios]
    runs-on: macos-14
    env:
      PACKAGENAME: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-ios-static
      DEVELOPER_DIR: /Applications/Xcode_13.4.1.app/Contents/Developer
      IOS_DEPLOYMENT_TARGET: '13.0'
      ENABLE_BITCODE: OFF
      ENABLE_ARC: OFF
      ENABLE_VISIBILITY: OFF
      EMSCRIPTEN_VERSION: 3.1.28
    steps:
    - uses: actions/checkout@v4
    - name: download-openmp-ios
      uses: actions/download-artifact@v3
      with:
        name: openmp-ios
        path: openmp-ios
    - name: install-openmp
      run: |
        sudo cp openmp-ios/include/* $DEVELOPER_DIR/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/usr/include
        sudo cp openmp-ios/include/* $DEVELOPER_DIR/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/include
        sudo cp openmp-ios/lib/libomp.a $DEVELOPER_DIR/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/usr/lib
        sudo cp openmp-ios/lib/libomp-simulator.a $DEVELOPER_DIR/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/lib/libomp.a
    - name: build-arm64
      run: |
        mkdir build-arm64 && cd build-arm64
        cmake .. -DENABLE_NCNN_BACKEND=OFF -DENABLE_WEBRWKV_BACKEND=ON -DBUILD_STATIC_LIB=ON
        cmake --build . -j 8
        cmake --build . --target install --config Release
