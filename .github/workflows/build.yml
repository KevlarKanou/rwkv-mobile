name: Build

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  setup:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.get_version.outputs.VERSION }}
    steps:
    - name: get-version
      id: get_version
      run: echo "VERSION=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

  build-ios-library:
    needs: [setup]
    runs-on: macos-14
    env:
      PACKAGENAME: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-ios-static
      DEVELOPER_DIR: /Applications/Xcode_15.2.app/Contents/Developer
      IOS_DEPLOYMENT_TARGET: '13.0'
      ENABLE_BITCODE: OFF
      ENABLE_ARC: OFF
      ENABLE_VISIBILITY: OFF
    steps:
    - uses: actions/checkout@v4
    - name: build-arm64
      run: |
        git clone https://github.com/MollySophia/web-rwkv-ffi -b molly && cd web-rwkv-ffi
        rustup target add aarch64-apple-ios
        cargo build --release --target aarch64-apple-ios
        cd ..
        cp web-rwkv-ffi/include/web_rwkv_ffi.h ./backends/web_rwkv
        rm -rf build-arm64
        mkdir build-arm64 && cd build-arm64
        cp ../web-rwkv-ffi/target/aarch64-apple-ios/release/libweb_rwkv_ffi.a .
        cmake .. -DENABLE_NCNN_BACKEND=OFF -DENABLE_WEBRWKV_BACKEND=ON -DENABLE_LLAMACPP_BACKEND=OFF -DBUILD_STATIC_LIB=ON -DBUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -GXcode -DCMAKE_TOOLCHAIN_FILE=../cmake/ios.toolchain.cmake -DPLATFORM=OS64 -DARCHS="arm64" \
          -DDEPLOYMENT_TARGET=$IOS_DEPLOYMENT_TARGET -DENABLE_BITCODE=$ENABLE_BITCODE -DENABLE_ARC=$ENABLE_ARC -DENABLE_VISIBILITY=$ENABLE_VISIBILITY
        cmake --build . --config Release -j 8
        cp ./Release-iphoneos/librwkv_mobile.a .

    - name: package
      run: |
        rm -f ${{ env.PACKAGENAME }}.zip
        pushd build-arm64
        zip -9 -y -r ../${{ env.PACKAGENAME }}.zip librwkv_mobile.a libweb_rwkv_ffi.a
        popd
    - name: upload-zip
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip
  
  build-macos-library-x64:
    needs: [setup]
    runs-on: macos-13
    env:
      PACKAGENAME: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-macos-x64
    steps:
    - uses: actions/checkout@v4
    - name: build-x64
      run: |
        rm -rf build-x64
        mkdir build-x64 && cd build-x64
        cmake .. -DENABLE_NCNN_BACKEND=ON -DENABLE_WEBRWKV_BACKEND=ON -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        cmake --build . -j 8
    - name: package
      run: |
        rm -f ${{ env.PACKAGENAME }}.zip
        pushd build-x64
        zip -9 -y -r ../${{ env.PACKAGENAME }}.zip librwkv_mobile.dylib
        popd
    - name: upload-zip
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip
  build-macos-library-aarch64:
    needs: [setup]
    runs-on: macos-14
    env:
      PACKAGENAME: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-macos-aarch64
    steps:
    - uses: actions/checkout@v4
    - name: build-arm64
      run: |
        rm -rf build-arm64
        mkdir build-arm64 && cd build-arm64
        cmake .. -DENABLE_NCNN_BACKEND=ON -DENABLE_WEBRWKV_BACKEND=ON -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        cmake --build . -j 8
    - name: package
      run: |
        rm -f ${{ env.PACKAGENAME }}.zip
        pushd build-arm64
        zip -9 -y -r ../${{ env.PACKAGENAME }}.zip librwkv_mobile.dylib
        popd
    - name: upload-zip
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip

  pack-macos-library-universal:
    needs: [setup, build-macos-library-x64, build-macos-library-aarch64]
    runs-on: macos-14
    env:
      PACKAGENAME: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-macos
    steps:
    - name: download-macos-x64
      uses: actions/download-artifact@v4
      with:
        name: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-macos-x64
    - name: download-macos-aarch64
      uses: actions/download-artifact@v4
      with:
        name: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-macos-aarch64
    - name: create-universal
      run: |
        rm -rf build-universal build-x64 build-arm64
        mkdir build-x64 && cd build-x64
        unzip ../librwkv_mobile-${{ needs.setup.outputs.VERSION }}-macos-x64.zip
        cd ..
        mkdir build-arm64 && cd build-arm64
        unzip ../librwkv_mobile-${{ needs.setup.outputs.VERSION }}-macos-aarch64.zip
        cd ..
        mkdir build-universal && cd build-universal
        lipo -create ../build-x64/librwkv_mobile.dylib ../build-arm64/librwkv_mobile.dylib -output librwkv_mobile.dylib
    - name: package
      run: |
        rm -f ${{ env.PACKAGENAME }}.zip
        pushd build-universal
        zip -9 -y -r ../${{ env.PACKAGENAME }}.zip librwkv_mobile.dylib
        popd
    - name: upload-zip
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip

  build-android-library:
    needs: [setup]
    runs-on: ubuntu-latest
    env:
      PACKAGENAME: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-aarch64-android-ndk-r25c
    steps:
    - uses: actions/checkout@v4
    - name: Install Ninja
      run: |
        sudo apt-get install ninja-build
    - name: ndk-r25c
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        wget -q https://dl.google.com/android/repository/android-ndk-r25c-linux.zip -O $GITHUB_WORKSPACE/android-ndk-r25c-linux.zip
        cd $GITHUB_WORKSPACE && unzip -q android-ndk-r25c-linux.zip
    - name: build
      run: |
        rm -rf build
        mkdir build && cd build
        cmake .. -DENABLE_NCNN_BACKEND=ON -DENABLE_WEBRWKV_BACKEND=OFF \
          -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=android-28 -DANDROID_NDK=$GITHUB_WORKSPACE/android-ndk-r25c \
          -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/android-ndk-r25c/build/cmake/android.toolchain.cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -G Ninja
        ninja
    - name: package
      run: |
        rm -f ${{ env.PACKAGENAME }}.zip
        pushd build
        zip -9 -y -r ../${{ env.PACKAGENAME }}.zip librwkv_mobile.so
        popd
    - name: upload-zip
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.zip

  upload-dev-release:
    needs: [setup, build-ios-library, build-android-library, pack-macos-library-universal]
    runs-on: ubuntu-latest
    steps:
      - name: download-ios
        uses: actions/download-artifact@v4
        with:
          name: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-ios-static

      - name: download-macos
        uses: actions/download-artifact@v4
        with:
          name: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-macos

      - name: download-android
        uses: actions/download-artifact@v4
        with:
          name: librwkv_mobile-${{ needs.setup.outputs.VERSION }}-aarch64-android-ndk-r25c

      - name: rename-dev-artifacts
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          mv librwkv_mobile-${{ needs.setup.outputs.VERSION }}-ios-static.zip librwkv_mobile-dev-latest-ios-static.zip
          mv librwkv_mobile-${{ needs.setup.outputs.VERSION }}-macos.zip librwkv_mobile-dev-latest-macos.zip
          mv librwkv_mobile-${{ needs.setup.outputs.VERSION }}-aarch64-android-ndk-r25c.zip librwkv_mobile-dev-latest-aarch64-android-ndk-r25c.zip
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            librwkv_mobile-dev-latest-ios-static.zip
            librwkv_mobile-dev-latest-macos.zip
            librwkv_mobile-dev-latest-aarch64-android-ndk-r25c.zip
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: ${{ github.event_name == 'push' && github.ref == 'refs/tags/v' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            librwkv_mobile-${{ needs.setup.outputs.VERSION }}-ios-static.zip
            librwkv_mobile-${{ needs.setup.outputs.VERSION }}-macos.zip
            librwkv_mobile-${{ needs.setup.outputs.VERSION }}-aarch64-android-ndk-r25c.zip